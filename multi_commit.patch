From a7eb3b1eea7b86193cb8ad64a7794eab84900a2d Mon Sep 17 00:00:00 2001
From: Armand <armandwinant@googlemail.com>
Date: Sun, 5 May 2024 14:30:26 +0200
Subject: [PATCH 1/4] use variable when signaling server launch

---
 server3.py | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/server3.py b/server3.py
index 1836de2..5f75eff 100644
--- a/server3.py
+++ b/server3.py
@@ -232,7 +232,7 @@ def run(routes, host='0.0.0.0', port=8080):
     thread = threading.Thread(target=server.serve_forever)
     thread.daemon = True
     thread.start()
-    print('HTTP server started on port 8080')
+    print(f'HTTP server started on port {port}')
     while True:
         from time import sleep
         sleep(1)
-- 
2.39.3 (Apple Git-146)


From cd436d89b17bc0b13e12ddd81e090f8c30ce13eb Mon Sep 17 00:00:00 2001
From: Armand <armandwinant@googlemail.com>
Date: Sun, 5 May 2024 14:34:10 +0200
Subject: [PATCH 2/4] add gitignore file

---
 .gitignore | 1 +
 1 file changed, 1 insertion(+)
 create mode 100644 .gitignore

diff --git a/.gitignore b/.gitignore
new file mode 100644
index 0000000..a2a8dea
--- /dev/null
+++ b/.gitignore
@@ -0,0 +1 @@
+.env/
-- 
2.39.3 (Apple Git-146)


From a94c6655a6a5428efbff3fb3293cb733fb29254c Mon Sep 17 00:00:00 2001
From: Armand <armandwinant@googlemail.com>
Date: Sun, 5 May 2024 14:58:27 +0200
Subject: [PATCH 3/4] compute and render ratio

---
 client3.py | 10 +++++++---
 1 file changed, 7 insertions(+), 3 deletions(-)

diff --git a/client3.py b/client3.py
index 3fc09b7..821458b 100644
--- a/client3.py
+++ b/client3.py
@@ -35,14 +35,16 @@ def getDataPoint(quote):
     stock = quote['stock']
     bid_price = float(quote['top_bid']['price'])
     ask_price = float(quote['top_ask']['price'])
-    price = bid_price
+    price = (bid_price + ask_price) / 2
     return stock, bid_price, ask_price, price
 
 
 def getRatio(price_a, price_b):
     """ Get ratio of price_a and price_b """
     """ ------------- Update this function ------------- """
-    return 1
+    if price_b == 0:
+        return
+    return price_a / price_b
 
 
 # Main
@@ -52,8 +54,10 @@ if __name__ == "__main__":
         quotes = json.loads(urllib.request.urlopen(QUERY.format(random.random())).read())
 
         """ ----------- Update to get the ratio --------------- """
+        prices = {}
         for quote in quotes:
             stock, bid_price, ask_price, price = getDataPoint(quote)
+            prices[stock] = price
             print("Quoted %s at (bid:%s, ask:%s, price:%s)" % (stock, bid_price, ask_price, price))
 
-        print("Ratio %s" % getRatio(price, price))
+        print("Ratio %s" % getRatio(prices["ABC"], prices["DEF"]))
-- 
2.39.3 (Apple Git-146)


From 79ac602e1f470df5ceb177fcfff1150367e84935 Mon Sep 17 00:00:00 2001
From: Armand <armandwinant@googlemail.com>
Date: Sun, 5 May 2024 16:42:51 +0200
Subject: [PATCH 4/4] add unit tests for getDataPoint function

---
 client_test.py | 26 +++++++++++++++++++++++++-
 1 file changed, 25 insertions(+), 1 deletion(-)

diff --git a/client_test.py b/client_test.py
index af2bf26..fa96c28 100644
--- a/client_test.py
+++ b/client_test.py
@@ -1,5 +1,5 @@
 import unittest
-from client3 import getDataPoint
+from client3 import getDataPoint, getRatio
 
 class ClientTest(unittest.TestCase):
   def test_getDataPoint_calculatePrice(self):
@@ -8,6 +8,11 @@ class ClientTest(unittest.TestCase):
       {'top_ask': {'price': 121.68, 'size': 4}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 117.87, 'size': 81}, 'id': '0.109974697771', 'stock': 'DEF'}
     ]
     """ ------------ Add the assertion below ------------ """
+    _, _, _, price = getDataPoint(quotes[0])
+    self.assertEqual((121.2 + 120.48) / 2, price)
+
+    _, _, _, price = getDataPoint(quotes[1])
+    self.assertEqual((121.68 + 117.87) / 2, price)
 
   def test_getDataPoint_calculatePriceBidGreaterThanAsk(self):
     quotes = [
@@ -15,9 +20,28 @@ class ClientTest(unittest.TestCase):
       {'top_ask': {'price': 121.68, 'size': 4}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 117.87, 'size': 81}, 'id': '0.109974697771', 'stock': 'DEF'}
     ]
     """ ------------ Add the assertion below ------------ """
+    _, bid_price, ask_price, _ = getDataPoint(quotes[0])
+    self.assertGreaterEqual(bid_price, ask_price)
+
+    _, bid_price, ask_price, _ = getDataPoint(quotes[1])
+    self.assertGreaterEqual(bid_price, ask_price)
 
 
   """ ------------ Add more unit tests ------------ """
+  def test_getRatio_zeroBidPrice(self):
+    quotes = [
+      {'top_ask': {'price': 119.2, 'size': 36}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 120.48, 'size': 109}, 'id': '0.109974697771', 'stock': 'ABC'},
+      {'top_ask': {'price': 0, 'size': 4}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 0, 'size': 81}, 'id': '0.109974697771', 'stock': 'DEF'}
+    ]
+
+    prices = {}
+    for quote in quotes:
+      stock, _, _, price = getDataPoint(quote)
+      prices[stock] = price
+    self.assertEqual(prices["DEF"], 0)
+    ratio = getRatio(prices["ABC"], prices["DEF"])
+
+    self.assertIsNone(ratio)
 
 
 
-- 
2.39.3 (Apple Git-146)

